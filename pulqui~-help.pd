#N canvas 297 61 779 583 12;
#X declare -path pulqui;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-signal 8000 float 2;
#X coords 0 1 8000 -1 200 140 1 0 0;
#X restore 57 393 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-scan 8000 float 2;
#X coords 0 1 8000 -1 200 140 1;
#X restore 299 395 graph;
#X msg 660 424 \; pd dsp 1;
#X obj 660 395 loadbang;
#X obj 72 273 tabwrite~ \$0-signal;
#X obj 195 207 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 98 308 tabwrite~ \$0-scan;
#X obj 193 230 t b b;
#X obj 76 137 *~;
#X obj 74 83 osc~ 20;
#X obj 100 109 phasor~ 10;
#X msg 128 148 info;
#X obj 78 221 pulqui~;
#X floatatom 234 310 5 0 0 0 - - - 0;
#X floatatom 299 310 8 0 0 0 - - - 0;
#X text 231 326 samples;
#X text 298 326 ms;
#N canvas 396 125 641 566 block-interaction 0;
#X msg 236 300 info;
#X obj 338 354 block~ 64;
#X msg 337 301 set \$1 1 1;
#X obj 270 240 t b f;
#X msg 210 148 64;
#X msg 248 152 128;
#X msg 286 163 256;
#X msg 321 183 512;
#X msg 352 205 1024;
#X msg 394 222 2048;
#X obj 156 289 osc~ 220;
#X text 121 94 try changing the patch block size and see the console. latency will grow or shrink automatically.;
#X obj 235 354 pulqui~ 0;
#X text 117 27 pulqui~ tries to use the smallest latency according to the patch block size and samplerate. the value has to be a multiply of the block size and bigger than 25ms.;
#X text 114 407 if you supply a power of 2 arg (say 512 samples) latency will be twice (1024 samples). If you change the patch block size to something bigger than the arg latency will grow but won't shrink back in case you change the patch block size to something smaller.;
#X connect 0 0 12 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X connect 3 1 2 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 12 0;
#X restore 585 241 pd block-interaction;
#X msg 142 173 info_outlet;
#X obj 260 274 unpack;
#X text 311 275 latency;
#N canvas 374 240 450 300 stuff 0;
#X obj 101 190 pdcontrol;
#X obj 101 130 pdcontrol;
#X msg 101 105 dir;
#X text 205 94 this window opens the html reference link via the [pdcontrol] object., f 25;
#X msg 101 159 browse \$1/readme.html;
#X obj 101 59 r \$0-readme;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 2 0;
#X restore 660 463 pd stuff;
#X obj 704 140 bng 19 250 50 0 \$0-readme empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 561 139 see readme.html -->;
#X text 225 205 <-- scope both signals;
#X text 174 145 <-- print latency to the console;
#X obj 27 22 cnv 10 300 6 empty empty pulqui~ 0 0 0 28 #dfdfdf #404040 0;
#X obj 566 309 pulquilimiter~;
#X text 491 310 see also:;
#N canvas 455 151 423 288 reference 0;
#X text 28 43 inlet: signal;
#X text 28 67 outlet 1: delayed signal;
#X text 30 88 outlet 2: delayed scanned signal;
#X text 32 193 methods: info - prints latency to the condole;
#X text 31 106 outlet 3:, f 34;
#X text 102 107 list: latency in samples and ms;
#X text 30 141 arguments:, f 34;
#X text 109 141 <float> - a power of 2 number to be used as buffer. 0 or no args for "auto", f 35;
#X text 50 12 -----------pulqui~ reference---------------;
#X text 94 215 info_outlet - outputs latency to 3th outlet, f 40;
#X restore 637 185 pd reference;
#X text 544 241 see:;
#X text 372 14 pulqui~ generates a “side-chain” signal that is used to manipulate the original signal via the pulquilimiter~ object or anything else you come up to. The process takes at least a theoretical latency of a little more than 25ms (half of a 20hz period). If the scanned signal contains a zero it is replaced by a one., f 51;
#X text 227 172 <-- output latency via 3th outlet;
#X obj 686 308 pulqui;
#X obj 593 548 declare -path pulqui;
#X text 578 506 use this in your patch to use the object(s), f 22;
#X connect 3 0 2 0;
#X connect 5 0 7 0;
#X connect 7 0 4 0;
#X connect 7 1 6 0;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 8 1;
#X connect 11 0 12 0;
#X connect 12 0 4 0;
#X connect 12 1 6 0;
#X connect 12 2 19 0;
#X connect 18 0 12 0;
#X connect 19 0 13 0;
#X connect 19 1 14 0;
